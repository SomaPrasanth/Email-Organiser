{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Email organiser\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport \"../styles/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const query = new URLSearchParams(useLocation().search);\n  const token = query.get('token');\n  const [emails, setEmails] = useState([]);\n  useEffect(() => {\n    const fetchEmails = async () => {\n      if (token) {\n        try {\n          const res = await axios.post('http://localhost:5000/gmail/emails', {\n            token\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          setEmails(res.data.messages);\n          console.log(res.data.messages);\n        } catch (err) {\n          console.error('Failed to fetch emails:', err);\n        }\n      }\n    };\n    fetchEmails();\n  }, [token]);\n  const handleDeleteEmail = async messageId => {\n    try {\n      console.log(messageId);\n      const res = await axios.post('http://localhost:5000/gmail/delete', {\n        token,\n        messageId\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(res.data.message);\n      setEmails(emails.filter(email => email.messageId !== messageId)); // Remove the email from the list\n    } catch (err) {\n      console.error('Failed to delete email:', err);\n    }\n  };\n  const handleMarkAsRead = async messageId => {\n    try {\n      const res = await axios.post('http://localhost:5000/gmail/markAsRead', {\n        token,\n        messageId\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(res.data.message);\n      setEmails(emails.map(email => email.messageId === messageId ? {\n        ...email,\n        isRead: true\n      } : email));\n    } catch (err) {\n      console.error('Failed to mark as read:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Emails:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"email-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: emails.map((email, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: email.isRead ? 'read' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.from\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteEmail(email.messageId),\n              className: \"delete\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this), !email.isRead && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMarkAsRead(email.messageId),\n              className: \"markAsRead\",\n              children: \"Mark as Read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"juqHKPNhNgpo8C+azG63R864XJs=\", false, function () {\n  return [useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","jsxDEV","_jsxDEV","Dashboard","_s","query","URLSearchParams","search","token","get","emails","setEmails","fetchEmails","res","post","headers","data","messages","console","log","err","error","handleDeleteEmail","messageId","message","filter","email","handleMarkAsRead","map","isRead","className","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","from","subject","date","onClick","_c","$RefreshReg$"],"sources":["D:/Project/Email organiser/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport \"../styles/index.css\";\r\n\r\nfunction Dashboard() {\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const token = query.get('token');\r\n  const [emails, setEmails] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    const fetchEmails = async () => {\r\n      if (token) {\r\n        try {\r\n          const res = await axios.post('http://localhost:5000/gmail/emails', \r\n            { token },\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n          );\r\n          setEmails(res.data.messages);\r\n          console.log(res.data.messages);\r\n        } catch (err) {\r\n          console.error('Failed to fetch emails:', err);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchEmails();\r\n  }, [token]);\r\n\r\n   const handleDeleteEmail = async (messageId) => {\r\n    try {\r\n      console.log(messageId);\r\n      const res = await axios.post('http://localhost:5000/gmail/delete', \r\n        { token, messageId },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n      console.log(res.data.message);\r\n      setEmails(emails.filter(email => email.messageId !== messageId)); // Remove the email from the list\r\n    } catch (err) {\r\n      console.error('Failed to delete email:', err);\r\n    }\r\n  };\r\n\r\n  const handleMarkAsRead = async (messageId) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/gmail/markAsRead', \r\n        { token, messageId },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n      console.log(res.data.message);\r\n      setEmails(emails.map(email => \r\n        email.messageId === messageId ? { ...email, isRead: true } : email\r\n      ));\r\n    } catch (err) {\r\n      console.error('Failed to mark as read:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n   <h2>Recent Emails:</h2>\r\n   <table className=\"email-table\">\r\n    <thead>\r\n      <tr>\r\n        <th>From</th>\r\n        <th>Subject</th>\r\n        <th>Date</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {emails.map((email, idx) => (\r\n        <tr key={idx} className={email.isRead ? 'read' : ''}>\r\n          <td>{email.from}</td>\r\n          <td>{email.subject}</td>\r\n          <td>{email.date}</td>\r\n          <td>\r\n            <button onClick={() => handleDeleteEmail(email.messageId)} className=\"delete\">Delete</button>\r\n            {!email.isRead && (\r\n              <button onClick={() => handleMarkAsRead(email.messageId)} className=\"markAsRead\">Mark as Read</button>\r\n            )}\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}