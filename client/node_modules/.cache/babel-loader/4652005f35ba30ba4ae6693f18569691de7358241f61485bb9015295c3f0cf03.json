{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Email organiser\\\\client\\\\src\\\\Components\\\\EmailTable.js\";\nimport EmailRow from './EmailRow';\nimport \"../styles/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailTable({\n  emails,\n  filterText,\n  selectedEmails,\n  setSelectedEmails,\n  handleDeleteEmail,\n  handleMarkAsRead\n}) {\n  const filteredEmails = emails.filter(email => email.from.toLowerCase().includes(filterText.toLowerCase()));\n  const allSelected = filteredEmails.length > 0 && filteredEmails.every(email => selectedEmails.includes(email.messageId));\n  const toggleSelectAll = () => {\n    if (allSelected) {\n      // Deselect all filtered emails\n      const remaining = selectedEmails.filter(id => !filteredEmails.some(email => email.messageId === id));\n      setSelectedEmails(remaining);\n    } else {\n      // Add all filtered emails to selectedEmails (avoid duplicates)\n      const newSelected = [...new Set([...selectedEmails, ...filteredEmails.map(email => email.messageId)])];\n      setSelectedEmails(newSelected);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Emails:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"email-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: allSelected,\n              onChange: toggleSelectAll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredEmails.map(email => /*#__PURE__*/_jsxDEV(EmailRow, {\n          email: email,\n          selectedEmails: selectedEmails,\n          setSelectedEmails: setSelectedEmails,\n          handleDeleteEmail: handleDeleteEmail,\n          handleMarkAsRead: handleMarkAsRead\n        }, email.messageId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = EmailTable;\nexport default EmailTable;\nvar _c;\n$RefreshReg$(_c, \"EmailTable\");","map":{"version":3,"names":["EmailRow","jsxDEV","_jsxDEV","EmailTable","emails","filterText","selectedEmails","setSelectedEmails","handleDeleteEmail","handleMarkAsRead","filteredEmails","filter","email","from","toLowerCase","includes","allSelected","length","every","messageId","toggleSelectAll","remaining","id","some","newSelected","Set","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","checked","onChange","_c","$RefreshReg$"],"sources":["D:/Project/Email organiser/client/src/Components/EmailTable.js"],"sourcesContent":["import EmailRow from './EmailRow';\r\nimport \"../styles/index.css\"\r\n\r\n\r\n\r\nfunction EmailTable({ emails, filterText, selectedEmails, setSelectedEmails, handleDeleteEmail, handleMarkAsRead }) {\r\n  const filteredEmails = emails.filter(email => email.from.toLowerCase().includes(filterText.toLowerCase()));\r\n\r\n  const allSelected = filteredEmails.length > 0 && filteredEmails.every(email =>\r\n    selectedEmails.includes(email.messageId)\r\n  );\r\n\r\n  const toggleSelectAll = () => {\r\n    if (allSelected) {\r\n      // Deselect all filtered emails\r\n      const remaining = selectedEmails.filter(id => !filteredEmails.some(email => email.messageId === id));\r\n      setSelectedEmails(remaining);\r\n    } else {\r\n      // Add all filtered emails to selectedEmails (avoid duplicates)\r\n      const newSelected = [\r\n        ...new Set([...selectedEmails, ...filteredEmails.map(email => email.messageId)])\r\n      ];\r\n      setSelectedEmails(newSelected);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Recent Emails:</h2>\r\n      <table className=\"email-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={allSelected}\r\n                onChange={toggleSelectAll}\r\n              />\r\n            </th>\r\n            <th>From</th>\r\n            <th>Subject</th>\r\n            <th>Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredEmails.map(email => (\r\n            <EmailRow\r\n              key={email.messageId}\r\n              email={email}\r\n              selectedEmails={selectedEmails}\r\n              setSelectedEmails={setSelectedEmails}\r\n              handleDeleteEmail={handleDeleteEmail}\r\n              handleMarkAsRead={handleMarkAsRead}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}