{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Email organiser\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport \"../styles/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const query = new URLSearchParams(useLocation().search);\n  const token = query.get('token');\n  const [emails, setEmails] = useState([]);\n  const [filterText, setFilterText] = useState('');\n  const [selectedEmails, setSelectedEmails] = useState([]);\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async () => {\n        for (const id of selectedEmails) {\n          await handleDeleteEmail(id);\n        }\n        setSelectedEmails([]); // Clear selection after deletion\n      },\n      disabled: selectedEmails.length === 0,\n      style: {\n        marginRight: '10px'\n      },\n      children: \"Delete Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: async () => {\n        for (const id of selectedEmails) {\n          await handleMarkAsRead(id);\n        }\n        setSelectedEmails([]); // Clear selection after marking\n      },\n      disabled: selectedEmails.length === 0,\n      children: \"Mark Selected as Read\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n  useEffect(() => {\n    const fetchEmails = async () => {\n      if (token) {\n        try {\n          const res = await axios.post('http://localhost:5000/gmail/emails', {\n            token\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          setEmails(res.data.messages);\n          console.log(res.data.messages);\n        } catch (err) {\n          console.error('Failed to fetch emails:', err);\n        }\n      }\n    };\n    fetchEmails();\n  }, [token]);\n  const handleDeleteEmail = async messageId => {\n    try {\n      console.log(messageId);\n      const res = await axios.post('http://localhost:5000/gmail/delete', {\n        token,\n        messageId\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(res.data.message);\n      setEmails(emails.filter(email => email.messageId !== messageId)); // Remove the email from the list\n    } catch (err) {\n      console.error('Failed to delete email:', err);\n    }\n  };\n  const handleMarkAsRead = async messageId => {\n    try {\n      const res = await axios.post('http://localhost:5000/gmail/markAsRead', {\n        token,\n        messageId\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(res.data.message);\n      setEmails(emails.map(email => email.messageId === messageId ? {\n        ...email,\n        isRead: true\n      } : email));\n    } catch (err) {\n      console.error('Failed to mark as read:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Filter by sender\",\n        value: filterText,\n        onChange: e => setFilterText(e.target.value),\n        style: {\n          padding: '8px',\n          fontSize: '14px',\n          width: '250px',\n          borderRadius: '5px',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          for (const id of selectedEmails) {\n            await handleDeleteEmail(id);\n          }\n          setSelectedEmails([]); // Clear selection after deletion\n        },\n        disabled: selectedEmails.length === 0,\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Delete Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          for (const id of selectedEmails) {\n            await handleMarkAsRead(id);\n          }\n          setSelectedEmails([]); // Clear selection after marking\n        },\n        disabled: selectedEmails.length === 0,\n        children: \"Mark Selected as Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Emails:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"email-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: emails.filter(email => email.from.toLowerCase().includes(filterText.toLowerCase())).map((email, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: {\n            backgroundColor: email.isRead ? '#f9f9f9' : '#fff'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedEmails.includes(email.messageId),\n              onChange: () => {\n                setSelectedEmails(prev => prev.includes(email.messageId) ? prev.filter(id => id !== email.messageId) : [...prev, email.messageId]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.from\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: email.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteEmail(email.messageId),\n              className: \"delete\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), !email.isRead && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMarkAsRead(email.messageId),\n              className: \"markAsRead\",\n              children: \"Mark as Read\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, email.messageId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"sFGEdkK35SjuEMTDQCm4MDLPciI=\", false, function () {\n  return [useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","jsxDEV","_jsxDEV","Dashboard","_s","query","URLSearchParams","search","token","get","emails","setEmails","filterText","setFilterText","selectedEmails","setSelectedEmails","style","marginBottom","children","onClick","id","handleDeleteEmail","disabled","length","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","handleMarkAsRead","fetchEmails","res","post","headers","data","messages","console","log","err","error","messageId","message","filter","email","map","isRead","className","type","placeholder","value","onChange","e","target","padding","fontSize","width","borderRadius","border","from","toLowerCase","includes","idx","backgroundColor","checked","prev","subject","date","_c","$RefreshReg$"],"sources":["D:/Project/Email organiser/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport \"../styles/index.css\";\r\n\r\nfunction Dashboard() {\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const token = query.get('token');\r\n  const [emails, setEmails] = useState([]);\r\n  const [filterText, setFilterText] = useState('');\r\n  const [selectedEmails, setSelectedEmails] = useState([]);\r\n  <div style={{ marginBottom: '1rem' }}>\r\n  <button\r\n    onClick={async () => {\r\n      for (const id of selectedEmails) {\r\n        await handleDeleteEmail(id);\r\n      }\r\n      setSelectedEmails([]); // Clear selection after deletion\r\n    }}\r\n    disabled={selectedEmails.length === 0}\r\n    style={{ marginRight: '10px' }}\r\n  >\r\n    Delete Selected\r\n  </button>\r\n\r\n  <button\r\n    onClick={async () => {\r\n      for (const id of selectedEmails) {\r\n        await handleMarkAsRead(id);\r\n      }\r\n      setSelectedEmails([]); // Clear selection after marking\r\n    }}\r\n    disabled={selectedEmails.length === 0}\r\n  >\r\n    Mark Selected as Read\r\n  </button>\r\n</div>\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchEmails = async () => {\r\n      if (token) {\r\n        try {\r\n          const res = await axios.post('http://localhost:5000/gmail/emails',\r\n            { token },\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n          );\r\n          setEmails(res.data.messages);\r\n          console.log(res.data.messages);\r\n        } catch (err) {\r\n          console.error('Failed to fetch emails:', err);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchEmails();\r\n  }, [token]);\r\n\r\n  const handleDeleteEmail = async (messageId) => {\r\n    try {\r\n      console.log(messageId);\r\n      const res = await axios.post('http://localhost:5000/gmail/delete',\r\n        { token, messageId },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n      console.log(res.data.message);\r\n      setEmails(emails.filter(email => email.messageId !== messageId)); // Remove the email from the list\r\n    } catch (err) {\r\n      console.error('Failed to delete email:', err);\r\n    }\r\n  };\r\n\r\n  const handleMarkAsRead = async (messageId) => {\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/gmail/markAsRead',\r\n        { token, messageId },\r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n      console.log(res.data.message);\r\n      setEmails(emails.map(email =>\r\n        email.messageId === messageId ? { ...email, isRead: true } : email\r\n      ));\r\n    } catch (err) {\r\n      console.error('Failed to mark as read:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter by sender\"\r\n          value={filterText}\r\n          onChange={(e) => setFilterText(e.target.value)}\r\n          style={{\r\n            padding: '8px',\r\n            fontSize: '14px',\r\n            width: '250px',\r\n            borderRadius: '5px',\r\n            border: '1px solid #ccc',\r\n          }}\r\n        />\r\n      </div>\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <button\r\n          onClick={async () => {\r\n            for (const id of selectedEmails) {\r\n              await handleDeleteEmail(id);\r\n            }\r\n            setSelectedEmails([]); // Clear selection after deletion\r\n          }}\r\n          disabled={selectedEmails.length === 0}\r\n          style={{ marginRight: '10px' }}\r\n        >\r\n          Delete Selected\r\n        </button>\r\n\r\n        <button\r\n          onClick={async () => {\r\n            for (const id of selectedEmails) {\r\n              await handleMarkAsRead(id);\r\n            }\r\n            setSelectedEmails([]); // Clear selection after marking\r\n          }}\r\n          disabled={selectedEmails.length === 0}\r\n        >\r\n          Mark Selected as Read\r\n        </button>\r\n      </div>\r\n\r\n\r\n      <h2>Recent Emails:</h2>\r\n      <table className=\"email-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Select</th>\r\n            <th>From</th>\r\n            <th>Subject</th>\r\n            <th>Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {emails\r\n            .filter((email) =>\r\n              email.from.toLowerCase().includes(filterText.toLowerCase())\r\n            )\r\n            .map((email, idx) => (\r\n              <tr key={email.messageId} style={{ backgroundColor: email.isRead ? '#f9f9f9' : '#fff' }}>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={selectedEmails.includes(email.messageId)}\r\n                    onChange={() => {\r\n                      setSelectedEmails((prev) =>\r\n                        prev.includes(email.messageId)\r\n                          ? prev.filter((id) => id !== email.messageId)\r\n                          : [...prev, email.messageId]\r\n                      );\r\n                    }}\r\n                  />\r\n                </td>\r\n                <td>{email.from}</td>\r\n                <td>{email.subject}</td>\r\n                <td>{email.date}</td>\r\n                <td>\r\n                  <button onClick={() => handleDeleteEmail(email.messageId)} className=\"delete\">Delete</button>\r\n                  {!email.isRead && (\r\n                    <button onClick={() => handleMarkAsRead(email.messageId)} className=\"markAsRead\">Mark as Read</button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}