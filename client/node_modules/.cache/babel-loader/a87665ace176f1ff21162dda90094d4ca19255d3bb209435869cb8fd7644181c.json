{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Email organiser\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const query = new URLSearchParams(useLocation().search);\n  const token = query.get('token');\n  const [emails, setEmails] = useState([]);\n  useEffect(() => {\n    const fetchEmails = async () => {\n      if (token) {\n        try {\n          const res = await axios.post('http://localhost:5000/gmail/emails', {\n            token\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          setEmails(res.data.messages);\n        } catch (err) {\n          console.error('Failed to fetch emails:', err);\n        }\n      }\n    };\n    fetchEmails();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Access Token: \", token]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Emails:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: emails.map((email, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), \" \", email.from, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Subject:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), \" \", email.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \" \", email.date, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 49\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Body:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: email.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 36\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"juqHKPNhNgpo8C+azG63R864XJs=\", false, function () {\n  return [useLocation];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","jsxDEV","_jsxDEV","Dashboard","_s","query","URLSearchParams","search","token","get","emails","setEmails","fetchEmails","res","post","headers","data","messages","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","email","idx","from","subject","date","body","_c","$RefreshReg$"],"sources":["D:/Project/Email organiser/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Dashboard() {\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const token = query.get('token');\r\n  const [emails, setEmails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEmails = async () => {\r\n      if (token) {\r\n        try {\r\n          const res = await axios.post('http://localhost:5000/gmail/emails', \r\n            { token },\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n          );\r\n          setEmails(res.data.messages);\r\n        } catch (err) {\r\n          console.error('Failed to fetch emails:', err);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchEmails();\r\n  }, [token]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard</h1>\r\n      <p>Access Token: {token}</p>\r\n\r\n      <h2>Recent Emails:</h2>\r\n      <ul>\r\n        {emails.map((email, idx) => (\r\n          <li key={idx}>\r\n            <strong>From:</strong> {email.from} <br />\r\n            <strong>Subject:</strong> {email.subject} <br />\r\n            <strong>Date:</strong> {email.date} <br />\r\n            <strong>Body:</strong> <pre>{email.body}</pre>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}