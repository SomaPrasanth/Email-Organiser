{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Email organiser\\\\client\\\\src\\\\Components\\\\EmailRow.js\";\nimport \"../styles/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailRow({\n  email,\n  selectedEmails,\n  setSelectedEmails,\n  handleDeleteEmail,\n  handleMarkAsRead\n}) {\n  const toggleSelection = () => {\n    setSelectedEmails(prev => prev.includes(email.messageId) ? prev.filter(id => id !== email.messageId) : [...prev, email.messageId]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    style: {\n      backgroundColor: email.isRead ? '#f9f9f9' : '#fff'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedEmails.includes(email.messageId),\n        onChange: toggleSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: email.from\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: email.subject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: email.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"delete\",\n        onClick: async () => {\n          await handleDeleteEmail(email.messageId);\n          setSelectedEmails(prev => prev.filter(id => id !== email.messageId));\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), !email.isRead && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          await handleMarkAsRead(email.messageId);\n        },\n        children: \"Mark as Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = EmailRow;\nexport default EmailRow;\nvar _c;\n$RefreshReg$(_c, \"EmailRow\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","EmailRow","email","selectedEmails","setSelectedEmails","handleDeleteEmail","handleMarkAsRead","toggleSelection","prev","includes","messageId","filter","id","style","backgroundColor","isRead","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","from","subject","date","class","onClick","_c","$RefreshReg$"],"sources":["D:/Project/Email organiser/client/src/Components/EmailRow.js"],"sourcesContent":["import \"../styles/index.css\"\r\n\r\nfunction EmailRow({ email, selectedEmails, setSelectedEmails, handleDeleteEmail, handleMarkAsRead }) {\r\n  const toggleSelection = () => {\r\n    setSelectedEmails(prev =>\r\n      prev.includes(email.messageId)\r\n        ? prev.filter(id => id !== email.messageId)\r\n        : [...prev, email.messageId]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <tr style={{ backgroundColor: email.isRead ? '#f9f9f9' : '#fff' }}>\r\n      <td><input type=\"checkbox\" checked={selectedEmails.includes(email.messageId)} onChange={toggleSelection} /></td>\r\n      <td>{email.from}</td>\r\n      <td>{email.subject}</td>\r\n      <td>{email.date}</td>\r\n      <td>\r\n        <button class = \"delete\" onClick={async () => {\r\n          await handleDeleteEmail(email.messageId);\r\n          setSelectedEmails(prev => prev.filter(id => id !== email.messageId));\r\n        }}>Delete</button>\r\n        {!email.isRead && (\r\n          <button onClick={async () => {\r\n            await handleMarkAsRead(email.messageId);\r\n          }}>Mark as Read</button>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EmailRow;\r\n"],"mappings":";AAAA,OAAO,qBAAqB;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAE5B,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,cAAc;EAAEC,iBAAiB;EAAEC,iBAAiB;EAAEC;AAAiB,CAAC,EAAE;EACnG,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BH,iBAAiB,CAACI,IAAI,IACpBA,IAAI,CAACC,QAAQ,CAACP,KAAK,CAACQ,SAAS,CAAC,GAC1BF,IAAI,CAACG,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKV,KAAK,CAACQ,SAAS,CAAC,GACzC,CAAC,GAAGF,IAAI,EAAEN,KAAK,CAACQ,SAAS,CAC/B,CAAC;EACH,CAAC;EAED,oBACEV,OAAA;IAAIa,KAAK,EAAE;MAAEC,eAAe,EAAEZ,KAAK,CAACa,MAAM,GAAG,SAAS,GAAG;IAAO,CAAE;IAAAC,QAAA,gBAChEhB,OAAA;MAAAgB,QAAA,eAAIhB,OAAA;QAAOiB,IAAI,EAAC,UAAU;QAACC,OAAO,EAAEf,cAAc,CAACM,QAAQ,CAACP,KAAK,CAACQ,SAAS,CAAE;QAACS,QAAQ,EAAEZ;MAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChHvB,OAAA;MAAAgB,QAAA,EAAKd,KAAK,CAACsB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBvB,OAAA;MAAAgB,QAAA,EAAKd,KAAK,CAACuB;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBvB,OAAA;MAAAgB,QAAA,EAAKd,KAAK,CAACwB;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBvB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAQ2B,KAAK,EAAG,QAAQ;QAACC,OAAO,EAAE,MAAAA,CAAA,KAAY;UAC5C,MAAMvB,iBAAiB,CAACH,KAAK,CAACQ,SAAS,CAAC;UACxCN,iBAAiB,CAACI,IAAI,IAAIA,IAAI,CAACG,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKV,KAAK,CAACQ,SAAS,CAAC,CAAC;QACtE,CAAE;QAAAM,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACjB,CAACrB,KAAK,CAACa,MAAM,iBACZf,OAAA;QAAQ4B,OAAO,EAAE,MAAAA,CAAA,KAAY;UAC3B,MAAMtB,gBAAgB,CAACJ,KAAK,CAACQ,SAAS,CAAC;QACzC,CAAE;QAAAM,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACxB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAET;AAACM,EAAA,GA5BQ5B,QAAQ;AA8BjB,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}