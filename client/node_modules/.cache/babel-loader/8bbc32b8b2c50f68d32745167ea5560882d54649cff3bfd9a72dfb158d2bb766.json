{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Email organiser\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport FilterBar from '../Components/FilterBar';\nimport BulkActions from '../Components/BulkActions';\nimport EmailTable from '../Components/EmailTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const query = new URLSearchParams(useLocation().search);\n  const token = query.get('token');\n  const [emails, setEmails] = useState([]);\n  const [filterText, setFilterText] = useState('');\n  const [selectedEmails, setSelectedEmails] = useState([]);\n  useEffect(() => {\n    const fetchEmails = async () => {\n      if (token) {\n        try {\n          const res = await axios.post('http://localhost:5000/gmail/emails', {\n            token\n          });\n          setEmails(res.data.messages);\n        } catch (err) {\n          console.error('Failed to fetch emails:', err);\n        }\n      }\n    };\n    fetchEmails();\n  }, [token]);\n  const handleDeleteEmail = async messageId => {\n    await axios.post('http://localhost:5000/gmail/delete', {\n      token,\n      messageId\n    });\n  };\n  const handleMarkAsRead = async messageId => {\n    await axios.post('http://localhost:5000/gmail/markAsRead', {\n      token,\n      messageId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n      filterText: filterText,\n      setFilterText: setFilterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BulkActions, {\n      emails: emails,\n      setEmails: setEmails,\n      selectedEmails: selectedEmails,\n      setSelectedEmails: setSelectedEmails,\n      handleDeleteEmail: handleDeleteEmail,\n      handleMarkAsRead: handleMarkAsRead\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmailTable, {\n      emails: emails,\n      filterText: filterText,\n      selectedEmails: selectedEmails,\n      setSelectedEmails: setSelectedEmails,\n      handleDeleteEmail: handleDeleteEmail,\n      handleMarkAsRead: handleMarkAsRead\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"sFGEdkK35SjuEMTDQCm4MDLPciI=\", false, function () {\n  return [useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","FilterBar","BulkActions","EmailTable","jsxDEV","_jsxDEV","Dashboard","_s","query","URLSearchParams","search","token","get","emails","setEmails","filterText","setFilterText","selectedEmails","setSelectedEmails","fetchEmails","res","post","data","messages","err","console","error","handleDeleteEmail","messageId","handleMarkAsRead","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Project/Email organiser/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport FilterBar from '../Components/FilterBar';\r\nimport BulkActions from '../Components/BulkActions';\r\nimport EmailTable from '../Components/EmailTable';\r\n\r\nfunction Dashboard() {\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const token = query.get('token');\r\n\r\n  const [emails, setEmails] = useState([]);\r\n  const [filterText, setFilterText] = useState('');\r\n  const [selectedEmails, setSelectedEmails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchEmails = async () => {\r\n      if (token) {\r\n        try {\r\n          const res = await axios.post('http://localhost:5000/gmail/emails', { token });\r\n          setEmails(res.data.messages);\r\n        } catch (err) {\r\n          console.error('Failed to fetch emails:', err);\r\n        }\r\n      }\r\n    };\r\n    fetchEmails();\r\n  }, [token]);\r\n\r\n  const handleDeleteEmail = async (messageId) => {\r\n    await axios.post('http://localhost:5000/gmail/delete', { token, messageId });\r\n  };\r\n\r\n  const handleMarkAsRead = async (messageId) => {\r\n    await axios.post('http://localhost:5000/gmail/markAsRead', { token, messageId });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <FilterBar filterText={filterText} setFilterText={setFilterText} />\r\n      <BulkActions\r\n        emails={emails}\r\n        setEmails={setEmails}\r\n        selectedEmails={selectedEmails}\r\n        setSelectedEmails={setSelectedEmails}\r\n        handleDeleteEmail={handleDeleteEmail}\r\n        handleMarkAsRead={handleMarkAsRead}\r\n      />\r\n      <EmailTable\r\n        emails={emails}\r\n        filterText={filterText}\r\n        selectedEmails={selectedEmails}\r\n        setSelectedEmails={setSelectedEmails}\r\n        handleDeleteEmail={handleDeleteEmail}\r\n        handleMarkAsRead={handleMarkAsRead}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}